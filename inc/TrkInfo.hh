//
// structs used to record per-track information in TTrees.
// All momenta are in units of MeV/c, time in nsec WRT when the proton bunch pulse peak hits the production target,
// positions are in mm WRT the center of the tracker.
// Dave Brown (LBNL)
//
#ifndef TrkInfo_HH
#define TrkInfo_HH
#include "Offline/DataProducts/inc/GenVector.hh"
#include "Offline/MCDataProducts/inc/MCRelationship.hh"
#include "Rtypes.h"
namespace mu2e
{
  // information about the track fit at a particular place.
  struct TrkFitInfo {
    XYZVectorF mom;
    XYZVectorF pos;
    Float_t momerr;
    Float_t d0;
    Float_t maxr;
    Float_t td;
    TrkFitInfo() { reset(); }
    void reset() {mom= XYZVectorF(); pos=XYZVectorF(); momerr=-1000.0; d0=0.0; maxr=0.0; td = 0.0; }
  };

  // general information about a track
  struct TrkInfo {
    Int_t status; // Kalman fit status
    Int_t alg; // pat. rec. algorithm
    Int_t pdg;   // PDG code of particle assumed in fit
    Int_t nhits;     // # hits associated to this track
    Int_t ndof;      // number of degrees of freedom in the fit
    Int_t nactive;   // number of active hits (actually used in the fit)
    Int_t ndouble,ndactive; // number of double-hit panels, and active double-hit panels
    Int_t nplanes; // number of planes hit
    Int_t planespan; // span between first and last plane
    Int_t nnullambig;  // number of hits without any ambiguity assigned
    Int_t nmat, nmatactive; // number materials (straw) assigned and used (active) to this fit
    Int_t nseg;     // number of trajectory segments
    Float_t t0;      // time this particle was estimated to cross z=0
    Float_t t0err;   // error on t0
    Float_t chisq;   // Kalman fit chisquared
    Float_t fitcon;  // Kalman fit chisqured consistency
    Float_t radlen;  // total radiation length of (active) material crossed by this particle inside the tracker
    Float_t firstflt, lastflt;  // distance along the helix of the first and last hit
    Float_t startvalid, endvalid; // distance along the helix for which the fit is accurate
    TrkInfo() { reset(); }
    void reset() {
      status = -1000;
      alg=0;
      pdg = 0;
      nhits = nactive = ndouble = ndactive = nplanes = planespan = nnullambig = nmat = nmatactive = nseg = ndof = -1;
      t0 = t0err = chisq = fitcon = radlen = firstflt = lastflt = -1.0;
      startvalid = endvalid = -999999.0;
    }
  };

  // general NC info about the particle which generated the majority of the hits used in this track
  struct TrkInfoMC {
    Int_t ndigi; // number of true straw digitizations (both ends) generatedy by the primary particle
    Int_t  ndigigood; // number of true straw digitizations where the primary particle (not a delta-ray) crossed threshold
    Int_t nhits, nactive; // number of hits on the track and active on the track generated by the primary particle
    Int_t nambig; // number of true hits where the reconstruction assigned the correct left-right ambiguity
    Int_t pdg, gen, proc; // true PDG code, generator code, and process code of the primary particle
    Float_t otime;  // origin time
    MCRelationship prel; // relationship if this tracks primary particle to the event primary
    XYZVectorF omom;  // origin momentum
    XYZVectorF opos;  // origin position

    TrkInfoMC() { reset(); }
    void reset() { ndigi = ndigigood = nactive = nhits = nambig = pdg = gen  = proc= -1;  otime=0.0;
      prel = MCRelationship();
      opos = XYZVectorF();
      omom = XYZVectorF();
    }
  };
  //  MC information about a particle for a specific point/time
  struct TrkInfoMCStep {
    Float_t time;  // time of this step
    XYZVectorF mom; // particle momentum at the start of this step
    XYZVectorF pos;  // particle position at the start of this step
    TrkInfoMCStep() { reset(); }
    void reset() { time = -1; mom = XYZVectorF(); pos = XYZVectorF(); }
  };

}
#endif
