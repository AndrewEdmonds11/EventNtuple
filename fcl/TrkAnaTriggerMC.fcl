#
#  Run TrkAna on the output of the trigger, including MC truth matching
#
#include "Offline/fcl/standardServices.fcl"
#include "TrkAna/fcl/prolog_trigger.fcl"
process_name : TrkAnaTriggerMC
services : @local::Services.Reco
source : {
  module_type : RootInput
}

physics : {
  analyzers : {
    TAtprDeM : {
      @table::TrkAnaTrigger.TrkAnaTT
      FitType : LoopHelix
      branches : [ @local::TrkAnaTrigger.TTtprDeM ]
      KalSeedMCAssns: "SelectRecoMCtprDeM"
      SelectEvents : [  "globalTrigger:tprDeM_highP_stopTarg"  ]
    }
    TAcprDeM : {
      @table::TrkAnaTrigger.TrkAnaTT
      FitType : LoopHelix
      branches : [ @local::TrkAnaTrigger.TTcprDeM ]
      KalSeedMCAssns: "SelectRecoMCcprDeM"
      SelectEvents : [ "globalTrigger:cprDeM_highP_stopTarg"  ]
    }
    TAtprDeP : {
      @table::TrkAnaTrigger.TrkAnaTT
      FitType : LoopHelix
      branches : [ @local::TrkAnaTrigger.TTtprDeP ]
      KalSeedMCAssns: "SelectRecoMCtprDeP"
      SelectEvents : [ "globalTrigger:tprDeP_highP_stopTarg"  ]
    }
    TAcprDeP : {
      @table::TrkAnaTrigger.TrkAnaTT
      FitType : LoopHelix
      branches : [ @local::TrkAnaTrigger.TTcprDeP ]
      KalSeedMCAssns: "SelectRecoMCcprDeP"
      SelectEvents : [  "globalTrigger:cprDeP_highP_stopTarg"  ]
    }
  }
  EndPath : [TAtprDeM, TAcprDeM, TAtprDeP, TAcprDeP]
}
end_paths : [ EndPath ]
services.TFileService.fileName: "nts.owner.trkana-triggerMC.version.sequencer.root"
