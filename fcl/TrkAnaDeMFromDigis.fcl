# Minimal job to reconstructed downstream electrons from digis and analyze the output with TrkAna
# Run this on digi datasets (for example dig.mu2e.CeEndpointMix1BBSignal.MDC2020r_best_v1_0.art)
#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "Production/JobConfig/reco/prolog.fcl"
#include "Offline/Mu2eKinKal/fcl/prolog.fcl"
#include "TrkAna/fcl/prolog.fcl"

process_name: TADeMDigis
source : { module_type : RootInput }
services : @local::Services.Reco
physics :
{
  producers : {
    @table::TrkHitReco.producers
    @table::Tracking.producers
    @table::CalPatRec.producers
    @table::CaloReco.producers
    @table::CaloCluster.producers
    @table::CaloMC.TruthProducers
    @table::CrvResponsePackage.producers
    @table::Reconstruction.producers
    @table::TrkAnaReco.producers
    @table::Mu2eKinKal.producers
    MergeKKDeM : {
      module_type : MergeKalSeeds
      KalSeedCollections : ["KKDeM"]
    }
  }
  filters : {
    @table::CalPatRec.filters
  }
  RecoPath : [
    @sequence::Reconstruction.CaloReco,
    @sequence::Reconstruction.TrkReco,
    @sequence::Reconstruction.CrvReco,
    TimeClusterFinderDe, HelixFinderDe,
    CalTimePeakFinder, CalHelixFinderDe,
    CalTimePeakFinderMu, CalHelixFinderDmu,
    MHDeM,
    KKDeM,
    MergeKKDeM,
    @sequence::Reconstruction.MCReco
  ]
  analyzers : {
    TrkAnaDeM : {
      @table::TrkAnaTreeMaker
      FitType : LoopHelix
      diagLevel : 2
      FillMCInfo : true
      FillTrkPIDInfo : false
      FillHitInfo : true
      FillTriggerInfo : false
      branches :  [
        { input: "MergeKK"
          branch : "trk"
          suffix : "DeM"
          options : { fillMC : true   genealogyDepth : -1 }
        }
      ]
      ExtraMCStepCollectionTags : [ "compressDigiMCs:protonabsorber", "compressDigiMCs:stoppingtarget" ]
    }
  }
  EndPath : [TrkAnaDeM]
}
outputs : {
  Output : {
    @table::Reconstruction.Output
    SelectEvents : [ "RecoPath" ]
  }
}
#include "Production/JobConfig/reco/epilog.fcl"
#include "Production/Validation/database.fcl"
# Override provenance of some objects since this job doesn't run CompressRecoMCs
physics.producers.CaloHitTruthMatch.primaryParticle : "compressDigiMCs"
physics.producers.CaloHitTruthMatch.caloShowerSimCollection : "compressDigiMCs"
# restrict reco to just DeM
physics.producers.SelectRecoMC.KalSeedCollections  : ["KKDeM"]
physics.producers.SelectRecoMC.HelixSeedCollections  : ["MHDeM"]
physics.producers.KKDeM.ModuleSettings.HelixSeedCollections : [ "MHDeM" ]
physics.producers.KKDeM.ModuleSettings.ComboHitCollection : "makeSH"
physics.producers.KKDeM.ModuleSettings.CaloClusterCollection : "CaloClusterMaker"
# since this is a diagnostic test, save failed fits as well
physics.producers.KKDeM.ModuleSettings.SaveAllFits : true
physics.end_paths : [ EndPath ]
services.TimeTracker.printSummary: true
services.TFileService.fileName: "nts.owner.TADeMDigis.version.sequence.root"
